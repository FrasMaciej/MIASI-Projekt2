module ERD2ClassDiagram;

create OUT : UML from IN : ERD;

rule Entity2Class {
    from
        e : ERD!Entity
    to
        c : UML!Class (
            name <- e.name,
            attributes <- e.attributes->collect(a | thisModule.Attribute2Property(a)),
            operations <- e.operations->collect(o | thisModule.Operation2Method(o))
        )
}

rule Attribute2Property {
    from
        a : ERD!Attribute
    to
        p : UML!Property (
            name <- a.name,
            type <- a.type
        )
}

rule Operation2Method {
    from
        o : ERD!Operation
    to
        m : UML!Operation (
            name <- o.name,
            parameters <- o.parameters->collect(p | thisModule.Parameter2Parameter(p)),
            returnType <- o.returnType
        )
}

rule Parameter2Parameter {
    from
        p : ERD!Parameter
    to
        pp : UML!Parameter (
            name <- p.name,
            type <- p.type
        )
}